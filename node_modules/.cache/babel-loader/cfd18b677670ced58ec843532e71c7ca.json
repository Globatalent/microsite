{"ast":null,"code":"import _classCallCheck from \"/home/alvaro/Projects/globatalent/microsite/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alvaro/Projects/globatalent/microsite/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alvaro/Projects/globatalent/microsite/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alvaro/Projects/globatalent/microsite/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alvaro/Projects/globatalent/microsite/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alvaro/Projects/globatalent/microsite/src/components/Modal.js\";\nimport React, { Component } from \"react\";\nimport './Modal.css';\n\nvar Modal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Modal, _Component);\n\n  function Modal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Modal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      displayModal: true\n    };\n\n    _this.closeModal = function () {\n      return _this.setState({\n        displayModal: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: this.state.displayModal ? 'modal is-active' : 'modal',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-background\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"modal-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"column\",\n        action: \"#\",\n        name: \"register\",\n        method: \"POST\",\n        style: {\n          backgroundColor: '#0a58a3'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"title is-4 form-title\",\n        style: {\n          texTransform: 'uppercase',\n          whiteSpace: 'nowrap'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, this.props.t('form.title')), React.createElement(\"div\", {\n        className: \"title is-4 has-text-centered text-centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"form-subtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, this.props.t('form.subtitle_1'), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, this.props.t('form.subtitle_2')))), React.createElement(\"div\", {\n        className: \"inputs-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field is-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, this.props.t('form.field_1.title'), React.createElement(\"span\", {\n        className: \"has-text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"*\"))), React.createElement(\"div\", {\n        className: \"field-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"input\",\n        required: true,\n        type: \"text\",\n        placeholder: this.props.t('form.field_1.help_1'),\n        maxLength: \"40\",\n        name: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"field is-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.props.t('form.field_2.title'), React.createElement(\"span\", {\n        className: \"has-text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"*\"))), React.createElement(\"div\", {\n        className: \"field-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"input\",\n        required: true,\n        type: \"text\",\n        placeholder: this.props.t('form.field_2.help_1'),\n        maxLength: \"80\",\n        name: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"field is-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.props.t('form.field_3.title'), React.createElement(\"span\", {\n        className: \"has-text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"*\"))), React.createElement(\"div\", {\n        className: \"field-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"input\",\n        required: true,\n        type: \"text\",\n        placeholder: this.props.t('form.field_3.help_1'),\n        maxLength: \"80\",\n        name: \"Fistname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"field is-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.props.t('form.field_4.title'), React.createElement(\"span\", {\n        className: \"has-text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"*\"))), React.createElement(\"div\", {\n        className: \"field-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"input\",\n        required: true,\n        type: \"text\",\n        placeholder: this.props.t('form.field_4.help_1'),\n        maxLength: \"80\",\n        name: \"Lastname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"field is-horizontal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.props.t('form.field_5.title'), React.createElement(\"span\", {\n        className: \"has-text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"*\"))), React.createElement(\"div\", {\n        className: \"field-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"input\",\n        required: true,\n        type: \"email\",\n        maxLength: \"100\",\n        name: \"Email\",\n        placeholder: this.props.t('form.field_5.help_1'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        autoComplete: \"off\",\n        required: true,\n        type: \"checkbox\",\n        name: \"privacyTool\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        href: \"https://market.globatalent.com/terms\",\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, this.props.t('form.terms'))))), React.createElement(\"div\", {\n        className: \"field is-grouped is-grouped-centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"button is-link form-button\",\n        id: \"formsubmit\",\n        type: \"submit\",\n        value: this.props.t('form.buttonSend'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"button is-text form-button\",\n        type: \"reset\",\n        value: this.props.t('form.buttonReset'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })))))), React.createElement(\"button\", {\n        className: \"modal-close is-large\",\n        \"aria-label\": \"close\",\n        onClick: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Modal;\n}(Component);\n\nexport default Modal;","map":{"version":3,"sources":["/home/alvaro/Projects/globatalent/microsite/src/components/Modal.js"],"names":["React","Component","Modal","state","displayModal","closeModal","setState","backgroundColor","texTransform","whiteSpace","props","t"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;;IAEMC,K;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,YAAY,EAAE;AADR,K;;UAGRC,U,GAAa;AAAA,aAAM,MAAKC,QAAL,CAAc;AAAEF,QAAAA,YAAY,EAAE;AAAhB,OAAd,CAAN;AAAA,K;;;;;;;6BACJ;AACP,aACE;AAAK,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,YAAX,GAA0B,iBAA1B,GAA8C,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAyB,QAAA,MAAM,EAAC,GAAhC;AAAoC,QAAA,IAAI,EAAC,UAAzC;AAAoD,QAAA,MAAM,EAAC,MAA3D;AAAkE,QAAA,KAAK,EAAE;AAACG,UAAAA,eAAe,EAAE;AAAlB,SAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,uBAAd;AAAsC,QAAA,KAAK,EAAE;AAACC,UAAAA,YAAY,EAAE,WAAf;AAA4BC,UAAAA,UAAU,EAAE;AAAxC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiG,KAAKC,KAAL,CAAWC,CAAX,CAAa,YAAb,CAAjG,CADJ,EAEI;AAAK,QAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B,KAAKD,KAAL,CAAWC,CAAX,CAAa,iBAAb,CAA9B,EAA8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9D,EAAoE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKD,KAAL,CAAWC,CAAX,CAAa,iBAAb,CAAP,CAApE,CADF,CAFJ,EAMI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B,KAAKD,KAAL,CAAWC,CAAX,CAAa,oBAAb,CAA1B,EAA6D;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA7D,CADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,QAAQ,MAAjC;AAAkC,QAAA,IAAI,EAAC,MAAvC;AAA8C,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,CAAX,CAAa,qBAAb,CAA3D;AAAgG,QAAA,SAAS,EAAC,IAA1G;AAA+G,QAAA,IAAI,EAAC,UAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CAJF,CADF,EAcE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B,KAAKD,KAAL,CAAWC,CAAX,CAAa,oBAAb,CAA1B,EAA6D;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA7D,CADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,QAAQ,MAAjC;AAAkC,QAAA,IAAI,EAAC,MAAvC;AAA8C,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,CAAX,CAAa,qBAAb,CAA3D;AAAgG,QAAA,SAAS,EAAC,IAA1G;AAA+G,QAAA,IAAI,EAAC,UAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CAJF,CAdF,EA2BE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B,KAAKD,KAAL,CAAWC,CAAX,CAAa,oBAAb,CAA1B,EAA6D;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA7D,CADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,QAAQ,MAAjC;AAAkC,QAAA,IAAI,EAAC,MAAvC;AAA8C,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,CAAX,CAAa,qBAAb,CAA3D;AAAgG,QAAA,SAAS,EAAC,IAA1G;AAA+G,QAAA,IAAI,EAAC,UAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CAJF,CA3BF,EAwCE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B,KAAKD,KAAL,CAAWC,CAAX,CAAa,oBAAb,CAA1B,EAA6D;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA7D,CADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,QAAQ,MAAjC;AAAkC,QAAA,IAAI,EAAC,MAAvC;AAA8C,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,CAAX,CAAa,qBAAb,CAA3D;AAAgG,QAAA,SAAS,EAAC,IAA1G;AAA+G,QAAA,IAAI,EAAC,UAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CAJF,CAxCF,EAqDE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B,KAAKD,KAAL,CAAWC,CAAX,CAAa,oBAAb,CAA1B,EAA6D;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA7D,CADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,QAAQ,MAAjC;AAAkC,QAAA,IAAI,EAAC,OAAvC;AAA+C,QAAA,SAAS,EAAC,KAAzD;AAA+D,QAAA,IAAI,EAAC,OAApE;AAA4E,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,CAAX,CAAa,qBAAb,CAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CAJF,CArDF,EA4FE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,YAAY,EAAC,KAApB;AAA0B,QAAA,QAAQ,MAAlC;AAAmC,QAAA,IAAI,EAAC,UAAxC;AAAmD,QAAA,IAAI,EAAC,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAG,QAAA,IAAI,EAAC,sCAAR;AAA+C,QAAA,GAAG,EAAC,qBAAnD;AAAyE,QAAA,MAAM,EAAC,QAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0F,KAAKD,KAAL,CAAWC,CAAX,CAAa,YAAb,CAA1F,CAFF,CADF,CADF,CA5FF,EAqGE;AAAK,QAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,4BAAjB;AAA8C,QAAA,EAAE,EAAC,YAAjD;AAA8D,QAAA,IAAI,EAAC,QAAnE;AAA4E,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,CAAX,CAAa,iBAAb,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,4BAAjB;AAA8C,QAAA,IAAI,EAAC,OAAnD;AAA2D,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,CAAX,CAAa,kBAAb,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CArGF,CANJ,CADA,CAFA,EAyHA;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,sBAAW,OAApD;AAA4D,QAAA,OAAO,EAAE,KAAKN,UAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzHA,CADF;AA6HD;;;;EAnIiBJ,S;;AAsIpB,eAAeC,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport './Modal.css'\n\nclass Modal extends Component {\n  state = {\n    displayModal: true\n  }\n  closeModal = () => this.setState({ displayModal: false })\n  render() {\n    return (\n      <div className={this.state.displayModal ? 'modal is-active' : 'modal'}>\n      <div className=\"modal-background\"></div>\n      <div className=\"modal-content\">\n      <form className=\"column\" action='#' name='register' method='POST' style={{backgroundColor: '#0a58a3'}}>\n          <h2 className=\"title is-4 form-title\" style={{texTransform: 'uppercase', whiteSpace: 'nowrap'}}>{this.props.t('form.title')}</h2>\n          <div className=\"title is-4 has-text-centered text-centered\">\n            <p className=\"form-subtitle\">{this.props.t('form.subtitle_1')}<br /><span>{this.props.t('form.subtitle_2')}</span></p>\n          </div>\n\n          <div className=\"inputs-container\">\n            <div className=\"field is-horizontal\">\n              <div className=\"field-label\">\n                <label className=\"label\">{this.props.t('form.field_1.title')}<span className=\"has-text-danger\">*</span></label>\n              </div>\n              <div className=\"field-body\">\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input className=\"input\" required type=\"text\" placeholder={this.props.t('form.field_1.help_1')} maxLength='40' name='Username' />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"field is-horizontal\">\n              <div className=\"field-label\">\n                <label className=\"label\">{this.props.t('form.field_2.title')}<span className=\"has-text-danger\">*</span></label>\n              </div>\n              <div className=\"field-body\">\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input className=\"input\" required type=\"text\" placeholder={this.props.t('form.field_2.help_1')} maxLength='80' name='Password' />\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"field is-horizontal\">\n              <div className=\"field-label\">\n                <label className=\"label\">{this.props.t('form.field_3.title')}<span className=\"has-text-danger\">*</span></label>\n              </div>\n              <div className=\"field-body\">\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input className=\"input\" required type=\"text\" placeholder={this.props.t('form.field_3.help_1')} maxLength='80' name='Fistname' />\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"field is-horizontal\">\n              <div className=\"field-label\">\n                <label className=\"label\">{this.props.t('form.field_4.title')}<span className=\"has-text-danger\">*</span></label>\n              </div>\n              <div className=\"field-body\">\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input className=\"input\" required type=\"text\" placeholder={this.props.t('form.field_4.help_1')} maxLength='80' name='Lastname' />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"field is-horizontal\">\n              <div className=\"field-label\">\n                <label className=\"label\">{this.props.t('form.field_5.title')}<span className=\"has-text-danger\">*</span></label>\n              </div>\n              <div className=\"field-body\">\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input className=\"input\" required type=\"email\" maxLength='100' name='Email' placeholder={this.props.t('form.field_5.help_1')} />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* <div className=\"field is-horizontal\">\n              <div className=\"field-label\">\n                <label className=\"label\">{this.props.t('form.field_6.title')}</label>\n              </div>\n              <div className=\"field-body\">\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input className=\"input\" type=\"tel\" placeholder={this.props.t('form.field_6.help_1')} maxLength='30' name='Phone' />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"field is-horizontal\">\n              <div className=\"field-label\">\n                <label className=\"label\">{this.props.t('form.field_7.title')}</label>\n              </div>\n              <div className=\"field-body\">\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input className=\"input\" type=\"text\" placeholder={this.props.t('form.field_7.help_1')} maxLength='100' name='Company' />\n                  </div>\n                </div>\n              </div>\n            </div> */}\n\n            <div className=\"field\">\n              <div className=\"control\">\n                <label className=\"checkbox\">\n                  <input autoComplete='off' required type='checkbox' name='privacyTool' />\n                  <a href=\"https://market.globatalent.com/terms\" rel=\"noopener noreferrer\" target=\"_blank\">{this.props.t('form.terms')}</a>\n                </label>\n              </div>\n            </div>\n\n            <div className=\"field is-grouped is-grouped-centered\">\n              <div className=\"control\">\n                <input className=\"button is-link form-button\" id='formsubmit' type='submit' value={this.props.t('form.buttonSend')} />\n              </div>\n              <div className=\"control\">\n                <input className=\"button is-text form-button\" type='reset' value={this.props.t('form.buttonReset')} />\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n      <button className=\"modal-close is-large\" aria-label=\"close\" onClick={this.closeModal}></button>\n    </div>\n    )\n  }\n}\n\nexport default Modal;"]},"metadata":{},"sourceType":"module"}